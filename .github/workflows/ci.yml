name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - ./init-scripts:/docker-entrypoint-initdb.d
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm run test:ci
    env:
      NODE_ENV: test
      TEST_DB: postgres://postgres:postgres@localhost:5432/postgres
      PG_TEST_HOST: localhost
      PG_TEST_USER: postgres
      PG_TEST_PW: postgres
      PG_TEST_DB: postgres
      PG_TEST_PORT: 5432
  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run lint
      - run: npm run build
